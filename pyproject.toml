[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=42"]

[project]
authors = [
    {email = "ash.vardanian@unum.cloud", name = "Ash Vardanian"},
    {email = "mike.kim@unum.cloud", name = "Mikhail Kim"},
    {email = "vladimir.orshulevich@unum.cloud", name = "Vladimir Orshulevich"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
    "Natural Language :: French",
    "Natural Language :: German",
    "Natural Language :: Italian",
    "Natural Language :: Japanese",
    "Natural Language :: Korean",
    "Natural Language :: Polish",
    "Natural Language :: Russian",
    "Natural Language :: Spanish",
    "Natural Language :: Turkish",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
]
dependencies = [
    "huggingface_hub>=0.16.4",
    "tokenizers>=0.13.3",
    "pillow",
    "simsimd",
    "numpy>=1.24.0,<3.0.0",
]
description = "Pocket-Sized Multimodal AI for Content Understanding and Generation"
maintainers = [
    {email = "info@unum.cloud", name = "Unum Cloud"},
]
name = "uform"
readme = "README.md"
requires-python = ">=3.10"
version = "3.1.4"

[project.scripts]
uform-chat = "uform.chat:main"

[project.optional-dependencies]
torch = ["torch>=2.7.0", "torchvision", "transformers>=4.50.0"]
onnx = ["onnx>=1.16.0", "onnxruntime>=1.20.0"]
onnx-gpu = ["onnx>=1.16.0", "onnxruntime-gpu>=1.20.0", "tensorrt-cu12>=10.0.0; platform_system=='Linux'"]
dev = ["pytest", "pandas", "requests", "tabulate", "psutil>=5.9.0", "nvidia-ml-py>=12.535.0"]

[project.urls]
"Homepage" = "https://github.com/unum-cloud/uform"

[tool.setuptools.packages.find]
where = ["python"]
include = ["uform"]
namespaces = false

[tool.ruff]
ignore = ["C408", "C901", "E501", "E741"]
ignore-init-module-imports = true
select = ["C", "E", "F", "I", "UP", "W"]

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.lint.isort]
known-first-party = ["uform"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E401"]

[tool.tomlsort]
all = true
in_place = true
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

# Configuration options for the Black formatter:
# https://black.readthedocs.io/en/latest/usage_and_configuration/the_basics.html#where-black-looks-for-the-file
[tool.black]
line-length = 120                   # Set line length to the same value as in `.clang-format` for modern wide screens
target-version = ['py310', 'py312']  # Set target Python versions to 3.10 and 3.12
